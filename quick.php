<?php

$normalDistribution = [
	-2, -3, -1, 3, 0, 1, 0, 1, 1, 0, 0, 2, -1,
	-2, -3, -1, 3, 0, 1, 0, 1, 1, 0, 0, 2, -1,
	-2, -3, -1, 3, 0, 1, 0, 1, 1, 0, 0, 2, -1,
	-2, -3, -1, 3, 0, 1, 0, 1, 1, 0, 0, 2, -1,
	-2, -3, -1, 3, 0, 1, 0, 1, 1, 0, 0, 2, -1,
	-2, -3, -1, 3, 0, 1, 0, 1, 1, 0, 0, 2, -1,
	-2, -3, -1, 3, 0, 1, 0, 1, 1, 0, 0, 2, -1,
	-2, -3, -1, 3, 0, 1, 0, 1, 1, 0, 0, 2, -1,
	-2, -3, -1, 3, 0, 1, 0, 1, 1, 0, 0, 2, -1,
	-2, -3, -1, 3, 0, 1, 0, 1, 1, 0, 0, 2, -1,
	-2, -3, -1, 3, 0, 1, 0, 1, 1, 0, 0, 2, -1,
	-2, -3, -1, 3, 0, 1, 0, 1, 1, 0, 0, 2, -1,
	-2, -3, -1, 3, 0, 1, 0, 1, 1, 0, 0, 2, -1,
	-2, -3, -1, 3, 0, 1, 0, 1, 1, 0, 0, 2, -1,
	-2, -3, -1, 3, 0, 1, 0, 1, 1, 0, 0, 2, -1,
	-2, -3, -1, 3, 0, 1, 0, 1, 1, 0, 0, 2, -1,
	-2, -3, -1, 3, 0, 1, 0, 1, 1, 0, 0, 2, -1,
	-2, -3, -1, 3, 0, 1, 0, 1, 1, 0, 0, 2, -1,
	-2, -3, -1, 3, 0, 1, 0, 1, 1, 0, 0, 2, -1,
	-2, -3, -1, 3, 0, 1, 0, 1, 1, 0, 0, 2, -1,
	-2, -3, -1, 3, 0, 1, 0, 1, 1, 0, 0, 2, -1,
	-2, -3, -1, 3, 0, 1, 0, 1, 1, 0, 0, 2, -1,
];

$shiftedDistribution = [
	2, 1, -1, -3, -1, -3, -1, -3, -3, -2, -2, -3, -2,
	2, 1, -1, -3, -1, -3, -1, -3, -3, -2, -2, -3, -2,
	2, 1, -1, -3, -1, -3, -1, -3, -3, -2, -2, -3, -2,
	2, 1, -1, -3, -1, -3, -1, -3, -3, -2, -2, -3, -2,
	2, 1, -1, -3, -1, -3, -1, -3, -3, -2, -2, -3, -2,
	2, 1, -1, -3, -1, -3, -1, -3, -3, -2, -2, -3, -2,
	2, 1, -1, -3, -1, -3, -1, -3, -3, -2, -2, -3, -2,
	2, 1, -1, -3, -1, -3, -1, -3, -3, -2, -2, -3, -2,
	2, 1, -1, -3, -1, -3, -1, -3, -3, -2, -2, -3, -2,
	2, 1, -1, -3, -1, -3, -1, -3, -3, -2, -2, -3, -2,
	2, 1, -1, -3, -1, -3, -1, -3, -3, -2, -2, -3, -2,
	2, 1, -1, -3, -1, -3, -1, -3, -3, -2, -2, -3, -2,
	2, 1, -1, -3, -1, -3, -1, -3, -3, -2, -2, -3, -2,
	2, 1, -1, -3, -1, -3, -1, -3, -3, -2, -2, -3, -2,
	2, 1, -1, -3, -1, -3, -1, -3, -3, -2, -2, -3, -2,
	2, 1, -1, -3, -1, -3, -1, -3, -3, -2, -2, -3, -2,
	2, 1, -1, -3, -1, -3, -1, -3, -3, -2, -2, -3, -2,
	2, 1, -1, -3, -1, -3, -1, -3, -3, -2, -2, -3, -2,
	2, 1, -1, -3, -1, -3, -1, -3, -3, -2, -2, -3, -2,
	2, 1, -1, -3, -1, -3, -1, -3, -3, -2, -2, -3, -2,
	2, 1, -1, -3, -1, -3, -1, -3, -3, -2, -2, -3, -2,
	2, 1, -1, -3, -1, -3, -1, -3, -3, -2, -2, -3, -2,

];

$betaDistribution = [
	-3, -3, -2, -3, 2, 0, 1, -1, -2, 3, 3, 2, 3,
	-3, -3, -2, -3, 2, 0, 1, -1, -2, 3, 3, 2, 3,
	-3, -3, -2, -3, 2, 0, 1, -1, -2, 3, 3, 2, 3,
	-3, -3, -2, -3, 2, 0, 1, -1, -2, 3, 3, 2, 3,
	-3, -3, -2, -3, 2, 0, 1, -1, -2, 3, 3, 2, 3,
	-3, -3, -2, -3, 2, 0, 1, -1, -2, 3, 3, 2, 3,
	-3, -3, -2, -3, 2, 0, 1, -1, -2, 3, 3, 2, 3,
	-3, -3, -2, -3, 2, 0, 1, -1, -2, 3, 3, 2, 3,
	-3, -3, -2, -3, 2, 0, 1, -1, -2, 3, 3, 2, 3,
	-3, -3, -2, -3, 2, 0, 1, -1, -2, 3, 3, 2, 3,
	-3, -3, -2, -3, 2, 0, 1, -1, -2, 3, 3, 2, 3,
	-3, -3, -2, -3, 2, 0, 1, -1, -2, 3, 3, 2, 3,
	-3, -3, -2, -3, 2, 0, 1, -1, -2, 3, 3, 2, 3,
	-3, -3, -2, -3, 2, 0, 1, -1, -2, 3, 3, 2, 3,
	-3, -3, -2, -3, 2, 0, 1, -1, -2, 3, 3, 2, 3,
	-3, -3, -2, -3, 2, 0, 1, -1, -2, 3, 3, 2, 3,
	-3, -3, -2, -3, 2, 0, 1, -1, -2, 3, 3, 2, 3,
	-3, -3, -2, -3, 2, 0, 1, -1, -2, 3, 3, 2, 3,
	-3, -3, -2, -3, 2, 0, 1, -1, -2, 3, 3, 2, 3,
	-3, -3, -2, -3, 2, 0, 1, -1, -2, 3, 3, 2, 3,
	-3, -3, -2, -3, 2, 0, 1, -1, -2, 3, 3, 2, 3,
	-3, -3, -2, -3, 2, 0, 1, -1, -2, 3, 3, 2, 3,
];

function partition(array &$list, int $left, int $right)
{
	$pivotIndex = $left + ($right - $left) / 2;
	$pivotValue = $list[$pivotIndex];

	$i = $left;
	$j = $right;

	while ($i <= $j) {
		while ($list[$i] < $pivotValue) {
			$i++;
		}

		while ($list[$j] > $pivotValue) {
			$j--;
		}

		if ($i <= $j) {
			$temp = $list[$i];
			$list[$i] = $list[$j];
			$list[$j] = $temp;

			$i++;
			$j--;
		}
	}

	return $i;
}

function quicksort(array &$list, int $left, int $right) {
	if ($left < $right) {
		$pivotIndex = partition($list, $left, $right);
		quicksort($list, $left, $pivotIndex - 1);
		quicksort($list, $pivotIndex, $right);
	}
}

$timeStart = microtime(true);

sort($normalDistribution);
// quicksort($normalDistribution, 0, count($normalDistribution) - 1);


$timeEnd = microtime(true);

echo ($timeEnd - $timeStart) * 1000000;
echo "\r\n";

$timeStart = microtime(true);

sort($shiftedDistribution);
// quicksort($shiftedDistribution, 0, count($shiftedDistribution) - 1);

$timeEnd = microtime(true);

echo ($timeEnd - $timeStart) * 1000000;
echo "\r\n";

$timeStart = microtime(true);

sort($betaDistribution);
// quicksort($betaDistribution, 0, count($betaDistribution) - 1);

$timeEnd = microtime(true);

echo ($timeEnd - $timeStart) * 1000000;
echo "\r\n";